{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoadingScreen = function LoadingScreen() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  useEffect(function () {\n    setTimeout(function () {\n      setIsLoading(false);\n    }, 3000);\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: require(\"../images/logo-white.png\"),\n      style: styles.image\n    }), isLoading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"white\"\n    }) : _jsx(YourMainAppContent, {})]\n  });\n};\nvar YourMainAppContent = function YourMainAppContent() {\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: \"Main App Content\"\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  image: {\n    width: 500,\n    height: 200,\n    resizeMode: 'contain'\n  }\n});\nexport default LoadingScreen;","map":{"version":3,"names":["React","useEffect","useState","View","ActivityIndicator","Image","StyleSheet","jsx","_jsx","jsxs","_jsxs","LoadingScreen","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","setTimeout","style","styles","container","children","source","require","image","size","color","YourMainAppContent","Text","create","flex","backgroundColor","justifyContent","alignItems","width","height","resizeMode"],"sources":["C:/Users/wangf/Myrepos/tedxsapienzauapp/tedxsapienzauapp/src/components/pages/LoadingScreen.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, ActivityIndicator, Image, StyleSheet } from 'react-native';\r\n\r\nconst LoadingScreen = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Simulate the splash screen duration\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 3000); // Adjust the duration (in milliseconds) as needed\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image\r\n        source={require('../images/logo-white.png')}\r\n        style={styles.image}\r\n      />\r\n      {isLoading ? (\r\n        <ActivityIndicator size=\"large\" color=\"white\" />\r\n      ) : (\r\n        <YourMainAppContent />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst YourMainAppContent = () => {\r\n  // Replace this with your actual main app content\r\n  return (\r\n    <View>\r\n      <Text>Main App Content</Text>\r\n      {/* Add your main app components here */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'black',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  image: {\r\n    width: 500, // Adjust the width and height as needed\r\n    height: 200,\r\n    resizeMode: 'contain', // Adjust the resizeMode as needed\r\n  },\r\n});\r\n\r\nexport default LoadingScreen;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGnD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAC1B,IAAAC,SAAA,GAAkCV,QAAQ,CAAC,IAAI,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAG9BZ,SAAS,CAAC,YAAM;IACdgB,UAAU,CAAC,YAAM;MACfD,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,OACEN,KAAA,CAACP,IAAI;IAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5Bb,IAAA,CAACH,KAAK;MACJiB,MAAM,EAAEC,OAAO,2BAA2B,CAAE;MAC5CL,KAAK,EAAEC,MAAM,CAACK;IAAM,CACrB,CAAC,EACDT,SAAS,GACRP,IAAA,CAACJ,iBAAiB;MAACqB,IAAI,EAAC,OAAO;MAACC,KAAK,EAAC;IAAO,CAAE,CAAC,GAEhDlB,IAAA,CAACmB,kBAAkB,IAAE,CACtB;EAAA,CACG,CAAC;AAEX,CAAC;AAED,IAAMA,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EAE/B,OACEnB,IAAA,CAACL,IAAI;IAAAkB,QAAA,EACHb,IAAA,CAACoB,IAAI;MAAAP,QAAA,EAAC;IAAgB,CAAM;EAAC,CAEzB,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGb,UAAU,CAACuB,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,OAAO;IACxBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDT,KAAK,EAAE;IACLU,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAezB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}