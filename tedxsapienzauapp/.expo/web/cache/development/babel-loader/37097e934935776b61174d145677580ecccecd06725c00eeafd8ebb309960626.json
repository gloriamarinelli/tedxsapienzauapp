{"ast":null,"code":"import React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoadingScreen = function LoadingScreen() {\n  var navigation = useNavigation();\n  useEffect(function () {\n    setTimeout(function () {\n      navigation.navigate('LoadingTransition');\n    }, 2000);\n  }, [navigation]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: require(\"../images/logo-white.png\"),\n      style: styles.image\n    }), _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"white\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  image: {\n    width: 200,\n    height: 80,\n    resizeMode: 'contain'\n  }\n});\nexport default LoadingScreen;","map":{"version":3,"names":["React","useEffect","View","ActivityIndicator","Image","StyleSheet","useNavigation","jsx","_jsx","jsxs","_jsxs","LoadingScreen","navigation","setTimeout","navigate","style","styles","container","children","source","require","image","size","color","create","flex","backgroundColor","justifyContent","alignItems","width","height","resizeMode"],"sources":["C:/Users/wangf/Myrepos/tedxsapienzauapp/tedxsapienzauapp/src/components/pages/LoadingScreen.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { View, ActivityIndicator, Image, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst LoadingScreen = () => {\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    // Simulate initial loading with a setTimeout\r\n    setTimeout(() => {\r\n      navigation.navigate('LoadingTransition'); // Navigate to LoadingTransition\r\n    }, 2000); // Adjust the duration of the \"LoadingScreen\" screen\r\n  }, [navigation]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image\r\n        source={require('../images/logo-white.png')}\r\n        style={styles.image}\r\n      />\r\n      <ActivityIndicator size=\"large\" color=\"white\" />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'black',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  image: {\r\n    width: 200, // Adjust the width and height as needed\r\n    height: 80,\r\n    resizeMode: 'contain', // Adjust the resizeMode as needed\r\n  },\r\n});\r\n\r\nexport default LoadingScreen;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAEzC,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAC1B,IAAMC,UAAU,GAAGN,aAAa,CAAC,CAAC;EAElCL,SAAS,CAAC,YAAM;IAEdY,UAAU,CAAC,YAAM;MACfD,UAAU,CAACE,QAAQ,CAAC,mBAAmB,CAAC;IAC1C,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,CAACF,UAAU,CAAC,CAAC;EAEhB,OACEF,KAAA,CAACR,IAAI;IAACa,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BV,IAAA,CAACJ,KAAK;MACJe,MAAM,EAAEC,OAAO,2BAA2B,CAAE;MAC5CL,KAAK,EAAEC,MAAM,CAACK;IAAM,CACrB,CAAC,EACFb,IAAA,CAACL,iBAAiB;MAACmB,IAAI,EAAC,OAAO;MAACC,KAAK,EAAC;IAAO,CAAE,CAAC;EAAA,CAC5C,CAAC;AAEX,CAAC;AAED,IAAMP,MAAM,GAAGX,UAAU,CAACmB,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,OAAO;IACxBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDP,KAAK,EAAE;IACLQ,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,EAAE;IACVC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAepB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}